plugins {
    id 'org.springframework.boot' version '3.0.3'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.graalvm.buildtools.native' version '0.9.18'
	id 'java'
	id 'signing'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sourceCompatibility = '17'

repositories {
	maven { url 'https://repo.spring.io/release' }
	mavenCentral()
	mavenLocal()
}

ext {
    set('springShellVersion', "3.0.0")
}

dependencies {
	implementation 'org.springframework.shell:spring-shell-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-logging'

	implementation 'com.bloxbean.cardano:yaci:0.1.8'
	implementation 'com.bloxbean.cardano:cardano-client-lib:0.4.3'
	implementation 'com.bloxbean.cardano:cardano-client-backend:0.4.3'

	implementation 'org.jeasy:easy-rules-core:4.1.0'
	implementation 'org.jeasy:easy-rules-mvel:4.1.0'

	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'com.google.guava:guava:31.1-jre'
	implementation 'org.apache.commons:commons-text:1.9'

	implementation 'org.codehaus.janino:janino:3.1.8'
	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

//springAot {
//	removeXmlSupport = false
//	removeSpelSupport = false
//	removeYamlSupport = false
//}

task genClusterTemplatesZip(type: Zip) {
	from sourceSets.main.resources
	include 'localcluster/**/*'
	archiveName 'localcluster.zip'
	destinationDir(new File("build/resources/main"))
}

compileJava {
    dependsOn genClusterTemplatesZip
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
if (isReleaseVersion && !project.hasProperty("skipSigning")) {
	signing {
		sign configurations.archives
	}
}
